{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","items","console","log","listItems","map","item","className","type","id","key","value","text","onChange","e","updateItem","target","icon","color","onClick","deleteItem","duration","easing","library","add","faTrash","App","handleInput","setState","currentItem","Date","now","addItem","preventDefault","newItem","state","newItems","filteredItem","filter","onSubmit","this","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAoCeA,MA/Bf,SAAmBC,GAEf,IAAMC,EAAQD,EAAMC,MACpBC,QAAQC,IAAIF,GACZ,IAAMG,EAAYH,EAAMI,KAAI,SAAAC,GAEpB,OACA,qBAAoBC,UAAU,OAA9B,SACI,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAUL,EAAKM,KACfC,SAAa,SAACC,GAAQd,EAAMe,WAAWD,EAAEE,OAAOL,MAAOL,EAAKI,QAE5D,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAAQC,MAAM,MAAMC,QAAU,kBAAMnB,EAAMoB,WAAWd,EAAKI,cARtGJ,EAAKI,QAevB,OACI,8BACI,cAAC,IAAD,CAAUW,SAAS,MAAMC,OAAO,cAAhC,SACKlB,O,eCxBjBmB,IAAQC,IAAIC,K,IAyFGC,E,kDArFb,WAAY1B,GAAO,IAAD,8BAChB,cAAMA,IAUR2B,YAAc,SAACb,GACb,EAAKc,SAAS,CACZC,YAAa,CACXjB,KAAME,EAAEE,OAAOL,MACfD,IAAKoB,KAAKC,UAfE,EAoBlBC,QAAU,SAAClB,GACTA,EAAEmB,iBACF,IAAMC,EAAU,EAAKC,MAAMN,YAE3B,GADA3B,QAAQC,IAAI+B,GACO,KAAhBA,EAAQtB,KAAW,CACpB,IAAMwB,EAAQ,sBAAO,EAAKD,MAAMlC,OAAlB,CAAyBiC,IAEvC,EAAKN,SAAS,CACZ3B,MAAOmC,EACPP,YAAY,CACVjB,KAAM,GACNF,IAAK,QA/BK,EAqClBU,WAAa,SAACV,GAEZR,QAAQC,IAAI,kBACZ,IAAMkC,EAAe,EAAKF,MAAMlC,MAAMqC,QAAO,SAAAhC,GAAI,OAC7CA,EAAKI,MAAQA,KAEjB,EAAKkB,SAAS,CACZ3B,MAAOoC,KA5CO,EAiDlBtB,WAAa,SAACH,EAAMF,GAClB,IAAMT,EAAQ,EAAKkC,MAAMlC,MACzBA,EAAMI,KAAK,SAAAC,GACLA,EAAKI,MAAQA,IACfJ,EAAKM,KAAOA,MAIhB,EAAKgB,SAAS,CACZ3B,MAAQA,KAxDV,EAAKkC,MAAQ,CACXlC,MAAO,GACP4B,YAAY,CACVjB,KAAO,GACPF,IAAM,KANM,E,0CA+DlB,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,iCACA,uBAAME,GAAG,aAAa8B,SAAUC,KAAKR,QAArC,UACE,uBAAOxB,KAAK,OAAOiC,YAAY,0BAC/B9B,MAAO6B,KAAKL,MAAMN,YAAYjB,KAC9BC,SAAU2B,KAAKb,cAEf,wBAAQnB,KAAK,SAAb,sBAGF,cAAC,EAAD,CACAP,MAAOuC,KAAKL,MAAMlC,MAClBmB,WAAYoB,KAAKpB,WACjBL,WAAYyB,KAAKzB,oB,GAhFP2B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a59e5383.chunk.js","sourcesContent":["import React from 'react';\nimport './ListItems.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move';\n\nfunction ListItems(props) {\n\n    const items = props.items;\n    console.log(items);\n    const listItems = items.map(item => \n        {\n            return (\n            <div key={item.key} className='list' > \n                <p>\n                    <input type=\"text\" \n                    id={item.key} \n                    value = { item.text }\n                    onChange = { (e) => { props.updateItem(e.target.value, item.key) } }\n                    />\n                    <span>\n                        <FontAwesomeIcon className=\"faicons\" icon=\"trash\" color=\"red\" onClick={ () => props.deleteItem(item.key)}/>\n                    </span>\n                </p> \n            </div>\n            );\n    });\n\n    return (\n        <div>\n            <FlipMove duration=\"500\" easing=\"ease-in-out\">\n                {listItems}\n            </FlipMove>\n        </div>\n    );\n}\n\nexport default ListItems;","import './App.css';\nimport React from 'react';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      currentItem:{\n        text : '',\n        key : ''\n      }\n    };\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    });\n  };\n\n  addItem = (e) => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!== \"\"){\n      const newItems = [...this.state.items, newItem];\n\n      this.setState({\n        items: newItems,\n        currentItem:{\n          text: '',\n          key: ''\n        }\n      });\n    }\n  }\n\n  deleteItem = (key) => {\n\n    console.log('item deleted!!');\n    const filteredItem = this.state.items.filter(item => \n        item.key !== key);\n      \n    this.setState({\n      items: filteredItem\n    });\n\n  }\n\n  updateItem = (text, key) => {\n    const items = this.state.items;\n    items.map( item => {\n      if( item.key === key){\n        item.text = text;\n      }\n    });\n\n    this.setState({\n      items : items\n    });\n\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <header>\n        <form id='to-do-form' onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter Your Text Here...\"\n          value={this.state.currentItem.text}\n          onChange={this.handleInput}\n          />\n          <button type=\"submit\" >Add</button>\n        </form>\n      </header>\n        <ListItems \n        items={this.state.items}  \n        deleteItem={this.deleteItem}\n        updateItem={this.updateItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}